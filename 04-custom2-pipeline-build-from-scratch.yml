# Stages
# Stage-1:
  # Task-1: Build Docker Image and push to Azure Container Registry ACR
  # Task-2: Copy kube-manifest files to Build Artifact Directory
  # Task-3: Publish build articats to Azure Pipelines
# Pipeline Hierarchial Flow: Stages -> Stage -> Jobs -> Job -> Steps -> Task1, Task2, Task3  

trigger:
- master

# Variables
variables:
  tag: '$(Build.BuildId)'

stages:
# Build Stage
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build Job
    pool: 
      vmImage: 'ubuntu-latest'
    steps:   
    # Task-1: Build Docker Image and push to Azure Container Registry ACR
    - task: Docker@2
      inputs:
        containerRegistry: 'thiruazure2labacr'
        repository: 'custom1aksnginxapp1'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
          $(Build.SourceVersion)
## Publish Artifacts pipeline code in addition to Build and Push          
    - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)        
    - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)        
    # Task-2: Copy files (Copy files from a source folder to target folder)
    # Source Directory: $(System.DefaultWorkingDirectory)/kube-manifests
    # Target Directory: $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/kube-manifests'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    # List files from Build Artifact Staging Directory - After Copy
    - bash: echo After copying to Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)     
    # Task-3: Publish build artifacts (Publish build to Azure Pipelines)         
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'kube-manifests'
        publishLocation: 'Container'
# Deploy Stage
- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: Job_1
    displayName: Agent job 1
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      clean: true
      fetchTags: false
    - task: KubernetesManifest@1
      displayName: createSecret
      inputs:
        action: createSecret
        kubernetesServiceEndpoint: 9ce29b90-3dac-4a42-9c25-b973e77534ee
        namespace: dev
        secretName: dev-aksdevopsacr-secret00
        dockerRegistryEndpoint: ce931957-c294-42e5-bb8f-624fe60ba6ed
    - task: KubernetesManifest@1
      displayName: deploy
      inputs:
        kubernetesServiceEndpoint: 9ce29b90-3dac-4a42-9c25-b973e77534ee
        namespace: dev
        manifests: kube-manifests/01-Deployment-and-LoadBalancer-Service.yml
        containers: thiruazure2labacr.azurecr.io/custom1aksnginxapp1:$(Deploy.SourceVersion)
        imagePullSecrets: dev-aksdevopsacr-secret00
